#!/usr/bin/env python
"""
电化学数据处理工具启动脚本
"""
import os
import sys
import traceback
import logging # 新增导入

# 确保可以找到 electrochemistry 包
# 如果 run_electrochemistry.py 在 'cursor' 目录中，则 'electrochemistry' 包是 script_dir 的子目录
# 并且 'electrochemistry' 也位于 'cursor' 中。
# 因此，script_dir（即 'cursor'）应该在 sys.path 中，以便找到 'electrochemistry'。
# 此外，如果包的通用实用程序或其他部分需要解析路径
# 相对于包的根目录（例如 'electrochemistry' 文件夹本身），
# 则该特定路径可能也需要考虑或通过包内的相对导入来处理。
# 目前，添加 'cursor' (script_dir) 是 'import electrochemistry' 的主要步骤。
script_dir = os.path.dirname(os.path.abspath(__file__))
if script_dir not in sys.path:
    sys.path.insert(0, script_dir)

def main_entry(): # 从 main 重命名而来
    # 在此设置日志记录，在执行任何其他操作之前，以确保尽早配置。
    # 这是一个基本配置。electrochemistry.main.setup_environment
    # 之后可以根据需要添加文件处理器或更具体的配置。
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(levelname)s - %(module)s - %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S'
    )
    # logger = logging.getLogger(__name__) # Get a logger for this module
    logger = logging.getLogger(__name__) # 获取此模块的日志记录器

    try:
        logger.info("run_electrochemistry.py: 启动脚本开始执行")
        # from electrochemistry.main import main as process_electrochemistry_data # Renamed import
        from electrochemistry.main import main as process_electrochemistry_data # 重命名的导入
        logger.info("run_electrochemistry.py: electrochemistry.main 模块已导入")
        process_electrochemistry_data()
        logger.info("run_electrochemistry.py: process_electrochemistry_data 函数已执行")
    except ImportError as e:
        # print(f"错误：无法导入电化学数据处理包: {e}")
        # print("请确保所有必要的包已正确安装，且目录结构正确。")
        logger.error(f"错误：无法导入电化学数据处理包: {e}", exc_info=True)
        # 添加更详细的错误信息
        if hasattr(e, 'name') and (e.name == 'electrochemistry.main' or e.name == 'main' or e.name == 'electrochemistry'):
            # print(f"看起来 '{e.name}' 模块或包无法找到。")
            # print(f"当前 sys.path: {sys.path}")
            # print(f"期望 'electrochemistry' 包在以下目录中: {script_dir}")
            logger.error(f"看起来 '{e.name}' 模块或包无法找到。当前 sys.path: {sys.path}. 期望 'electrochemistry' 包在以下目录中: {script_dir}")
        elif hasattr(e, 'name') and e.name:
            # print(f"无法导入名为 '{e.name}' 的模块或包。")
            logger.error(f"无法导入名为 '{e.name}' 的模块或包。")
        else:
            # print("发生了一个未指明名称的导入错误。")
            logger.error("发生了一个未指明名称的导入错误。")
    except KeyboardInterrupt:
        # print("\n程序被用户中断")
        logger.warning("程序被用户中断")
    except Exception as e:
        # print(f"运行过程中发生错误: {e}")
        # print(f"错误详情: {traceback.format_exc()}")
        logger.critical(f"运行过程中发生严重错误: {e}", exc_info=True)
    finally:
        logger.info("run_electrochemistry.py: 启动脚本执行完毕或已终止")
        # 仅在交互式终端中提示输入
        try:
            # 在打包后的exe中sys.stdin可能为None或没有isatty属性
            if sys.stdin is not None and hasattr(sys.stdin, 'isatty') and sys.stdin.isatty():
                input("按Enter键退出...")
        except Exception:
            # 忽略任何与终端检测相关的错误
            logger.debug("无法检测交互式终端或不在交互模式下运行")

if __name__ == "__main__":
    main_entry() # 调用重命名后的 main 函数
    
